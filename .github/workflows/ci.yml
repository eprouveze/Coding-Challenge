name: CI

on:
  push:
    branches: [ main, 'llm-*' ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: backend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend

  frontend-tests:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run type check
      run: npm run type-check
    
    - name: Run linter
      run: npm run lint -- --max-warnings 20
    
    - name: Run tests
      run: npm test -- --run --coverage
    
    - name: Build
      run: npm run build

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install backend dependencies
      working-directory: backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Start backend
      working-directory: backend
      run: |
        uvicorn src.main:app --host 0.0.0.0 --port 8000 &
        sleep 5
    
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm install
    
    - name: Run Cypress tests
      working-directory: frontend
      run: |
        npm run dev &
        sleep 10
        npm run e2e

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build backend Docker image
      run: docker build -f backend/Dockerfile -t event-management-backend backend/
    
    - name: Build frontend Docker image
      run: docker build -f frontend/Dockerfile -t event-management-frontend frontend/